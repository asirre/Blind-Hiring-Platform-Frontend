stages:
  - build
  - deploy

variables:
  IMAGE_NAME: webapp
  TAG_LATEST: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:latest
  TAG_COMMIT: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  ECS_CLUSTER: WebApp
  DOCKER_TLS_CERTDIR: ""

docker:
  image: docker:stable
  stage: build
  only:
    - main
  services:
    - docker:dind
  before_script:
    - apk add --no-cache python3 py3-pip
    - pip3 install --no-cache-dir awscli
  script:
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION |
      docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
    - docker pull $TAG_LATEST || true
    - docker build --cache-from $TAG_LATEST -t $TAG_COMMIT -t $TAG_LATEST .
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST

deploy:
    stage: deploy
    image:
      name: amazon/aws-cli
      entrypoint: [ "" ]
    only:
        - main
    script:
        - aws ecs register-task-definition --family $ECS_SERVICE --container-definitions file://task_definition.json --execution-role-arn arn:aws:iam::331211748190:role/ecsTaskExecutionRole --network-mode awsvpc
        - aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment